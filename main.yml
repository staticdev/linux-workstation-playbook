---
- name: Define hosts
  hosts: all

  vars_files:
    - default.config.yml

  pre_tasks:
    - name: SSH and become checks
      ansible.builtin.include_tasks: tasks/site.yml

    - name: Load config
      ansible.builtin.include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/config.yml"

    - name: Validate config
      ansible.builtin.include_tasks: tasks/validate-config.yml

    - name: Ensure workspace user exists
      become: true
      ansible.builtin.user:
        name: "{{ workspace_user }}"
        state: present
      register: workspace_user_details

    - name: Install packages
      ansible.builtin.include_tasks: tasks/packages.yml
      when: install_packages

    - name: Install zsh
      ansible.builtin.include_tasks: tasks/zsh.yml
      when: install_zsh

  handlers:
    - name: Restart gnome
      ansible.builtin.command: killall -SIGQUIT gnome-shell
      changed_when: true

    - name: Delete openrgb repo
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/OpenRGB"
        state: absent

    - name: Delete openrgb generated files
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: absent
      with_items:
        - "openrgb_{{ openrgb_deb_version }}_{{ openrgb_deb_architecture }}.buildinfo"
        - "openrgb_{{ openrgb_deb_version }}_{{ openrgb_deb_architecture }}.changes"
        - "openrgb_{{ openrgb_deb_version }}_{{ openrgb_deb_architecture }}.deb"
        - "openrgb-dbgsym_{{ openrgb_deb_version }}_{{ openrgb_deb_architecture }}.deb"

  roles:
    # - role: staticdev.firefox
    #   when: configure_firefox
    # - role: staticdev.brave
    #   when: install_brave
    # - role: geerlingguy.docker
    #   vars:
    #     docker_users: ["{{ workspace_user }}"]
    #   when: install_docker
    #   become: true
    # - role: robertdebock.obsproject
    #   when: install_obs
    #   become: true
    # - role: gantsign.golang
    #   when: golang_developer
    - role: geerlingguy.nodejs
      vars:
        nodejs_install_npm_user: "{{ workspace_user }}"
      when: nodejs_developer
      become: true
    # - role: staticdev.python_developer
    #   when: python_developer
    # - role: staticdev.signal
    #   when: install_signal
    # - role: green_leader.codium
    #   when: install_vscodium
    #   become: true
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
    # - role: stefangweichinger.ansible_rclone
    #   when: install_rclone

  tasks:
    - name: Install Pycharm
      ansible.builtin.include_tasks: tasks/pycharm.yml
      when: install_pycharm

    - name: Office setup
      ansible.builtin.include_tasks: tasks/office.yml
      when: install_onlyoffice or remove_libreoffice

    - name: Extra packages
      ansible.builtin.include_tasks: tasks/extra-packages.yml
      when: install_extra_packages
    - name: Create SSH key
      ansible.builtin.include_tasks: tasks/ssh.yml
      when: configure_ssh

    - name: Configure sudoers
      ansible.builtin.include_tasks: tasks/sudoers.yml
      when: configure_sudoers

    - name: Setup Git
      ansible.builtin.include_tasks: tasks/git-setup.yml
      when: setup_git

    - name: Cryptomator
      ansible.builtin.include_tasks: tasks/cryptomator.yml
      when: install_cryptomator

    - name: Install Keypass XC
      ansible.builtin.import_tasks: tasks/keypass-xc.yml
      when: install_keypass_xc

    - name: OpenRGB
      ansible.builtin.include_tasks: tasks/openrgb.yml
      when: install_openrgb

    - name: Enable entire screen sharing
      ansible.builtin.lineinfile:
        dest: /etc/gdm3/daemon.conf
        regexp: '^#\s*WaylandEnable=false.*$'
        line: "WaylandEnable=false"
      become: true
      when: enable_screen_sharing

    - name: Gnome Setup
      ansible.builtin.import_tasks: tasks/gnome-setup.yml
      when: gnome_setup

    - name: Configure keyboard
      ansible.builtin.import_tasks: tasks/keyboard.yml
      when: configure_keyboard

    - name: Configure terminal
      ansible.builtin.include_tasks: tasks/terminal.yml
      when: configure_terminal

    - name: Run configured post-provision ansible task files.
      ansible.builtin.include_tasks: "{{ outer_item }}"
      loop_control:
        loop_var: outer_item
      with_fileglob: "{{ post_provision_tasks | default(omit) }}"
